# Common files
require 'ruby_sdk/api_client'
require 'ruby_sdk/api_error'
require 'ruby_sdk/version'
require 'ruby_sdk/configuration'

# Models
require 'ruby_sdk/models/base_object'
require 'models.AsposeResponse'
require 'models.BookmarkData'
require 'models.BookmarksOutlineLevelData'
require 'models.CompareData'
require 'models.Document'
require 'models.DocumentEntry'
require 'models.DocumentEntryList'
require 'models.DocumentPosition'
require 'models.DocumentStatData'
require 'models.DownsampleOptionsData'
require 'models.FootnotesStatData'
require 'models.GraphicsQualityOptionsData'
require 'models.Link'
require 'models.LinkElement'
require 'models.LoadWebDocumentData'
require 'models.MetafileRenderingOptionsData'
require 'models.ModificationOperationResult'
require 'models.OutlineOptionsData'
require 'models.PageNumber'
require 'models.PageStatData'
require 'models.ParagraphInsert'
require 'models.PdfDigitalSignatureDetailsData'
require 'models.PdfEncryptionDetailsData'
require 'models.PreferredWidth'
require 'models.ProtectionData'
require 'models.ProtectionRequest'
require 'models.ReplaceTextRequest'
require 'models.SaveOptionsData'
require 'models.SaveResult'
require 'models.SearchResult'
require 'models.SplitDocumentResult'
require 'models.StoryChildNodes'
require 'models.StringFormatData'
require 'models.TableCellInsert'
require 'models.TableInsert'
require 'models.TableRowInsert'
require 'models.WatermarkText'
require 'models.XmlColor'
require 'models.Bookmark'
require 'models.BookmarkResponse'
require 'models.Bookmarks'
require 'models.BookmarksResponse'
require 'models.Border'
require 'models.BorderResponse'
require 'models.BordersCollection'
require 'models.BordersResponse'
require 'models.CommentLink'
require 'models.CommentResponse'
require 'models.CommentsCollection'
require 'models.CommentsResponse'
require 'models.DocSaveOptionsData'
require 'models.DocumentProperties'
require 'models.DocumentPropertiesResponse'
require 'models.DocumentProperty'
require 'models.DocumentPropertyResponse'
require 'models.DocumentResponse'
require 'models.DrawingObjectCollection'
require 'models.DrawingObjectResponse'
require 'models.DrawingObjectsResponse'
require 'models.FieldCollection'
require 'models.FieldNames'
require 'models.FieldNamesResponse'
require 'models.FieldResponse'
require 'models.FieldsResponse'
require 'models.FileLink'
require 'models.FixedPageSaveOptionsData'
require 'models.Font'
require 'models.FontResponse'
require 'models.FootnoteCollection'
require 'models.FootnoteResponse'
require 'models.FootnotesResponse'
require 'models.FormFieldCollection'
require 'models.FormFieldResponse'
require 'models.FormFieldsResponse'
require 'models.HeaderFooterLink'
require 'models.HeaderFooterLinkCollection'
require 'models.HeaderFooterResponse'
require 'models.HeaderFootersResponse'
require 'models.HtmlSaveOptionsData'
require 'models.Hyperlink'
require 'models.HyperlinkResponse'
require 'models.Hyperlinks'
require 'models.HyperlinksResponse'
require 'models.NodeLink'
require 'models.OdtSaveOptionsData'
require 'models.OfficeMathObjectResponse'
require 'models.OfficeMathObjectsCollection'
require 'models.OfficeMathObjectsResponse'
require 'models.OoxmlSaveOptionsData'
require 'models.PageSetup'
require 'models.ParagraphLinkCollection'
require 'models.ParagraphLinkCollectionResponse'
require 'models.ParagraphResponse'
require 'models.ProtectionDataResponse'
require 'models.ProtectionResponse'
require 'models.ReplaceTextResponse'
require 'models.RevisionsModificationResponse'
require 'models.RtfSaveOptionsData'
require 'models.RunResponse'
require 'models.Runs'
require 'models.RunsResponse'
require 'models.SaveResponse'
require 'models.SearchResponse'
require 'models.SearchResultsCollection'
require 'models.Section'
require 'models.SectionLink'
require 'models.SectionLinkCollection'
require 'models.SectionLinkCollectionResponse'
require 'models.SectionPageSetupResponse'
require 'models.SectionResponse'
require 'models.SplitDocumentResponse'
require 'models.StatDataResponse'
require 'models.TableCellFormat'
require 'models.TableCellFormatResponse'
require 'models.TableCellResponse'
require 'models.TableLinkCollection'
require 'models.TableLinkCollectionResponse'
require 'models.TableProperties'
require 'models.TablePropertiesResponse'
require 'models.TableResponse'
require 'models.TableRowFormat'
require 'models.TableRowFormatResponse'
require 'models.TableRowResponse'
require 'models.TextItem'
require 'models.TextItems'
require 'models.TextItemsResponse'
require 'models.TextSaveOptionsData'
require 'models.WordMLSaveOptionsData'
require 'models.WordsApiErrorResponse'
require 'models.WordsApiLink'
require 'models.XamlFlowSaveOptionsData'
require 'models.Comment'
require 'models.DrawingObjectLink'
require 'models.EpubSaveOptionsData'
require 'models.FieldLink'
require 'models.FootnoteLink'
require 'models.FormField'
require 'models.HeaderFooter'
require 'models.HtmlFixedSaveOptionsData'
require 'models.ImageSaveOptionsData'
require 'models.MhtmlSaveOptionsData'
require 'models.OfficeMathLink'
require 'models.Paragraph'
require 'models.ParagraphLink'
require 'models.PclSaveOptionsData'
require 'models.PdfSaveOptionsData'
require 'models.PsSaveOptionsData'
require 'models.RunLink'
require 'models.SvgSaveOptionsData'
require 'models.SwfSaveOptionsData'
require 'models.Table'
require 'models.TableCell'
require 'models.TableLink'
require 'models.TableRow'
require 'models.XamlFixedSaveOptionsData'
require 'models.XpsSaveOptionsData'
require 'models.BmpSaveOptionsData'
require 'models.DrawingObject'
require 'models.EmfSaveOptionsData'
require 'models.Field'
require 'models.Footnote'
require 'models.FormFieldCheckbox'
require 'models.FormFieldDropDown'
require 'models.FormFieldTextInput'
require 'models.GifSaveOptionsData'
require 'models.JpegSaveOptionsData'
require 'models.OfficeMathObject'
require 'models.PngSaveOptionsData'
require 'models.Run'
require 'models.TiffSaveOptionsData'

# APIs
require 'ruby_sdk/api/words_api'

module RubySDK
  class << self
    # Configure sdk using block.
    # RubySDK.configure do |config|
    #   config.username = "xxx"
    #   config.password = "xxx"
    # end
    # If no block given, return the configuration singleton instance.
    def configure
      if block_given?
        yield Configuration.instance
      else
        Configuration.instance
      end
    end
  end
end
